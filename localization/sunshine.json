{
  "en": {
    "sunshine_title": "Sunshine Experimental Keyboard",
    "win_gallerynav_title": "◈ article.nav",
    "win_gallery_title": "▤ sunshine.article",
    "nav_h2_tldr": "Abstract",
    "nav_h2_intro": "Background",
    "nav_h2_objectives": "Objectives",
    "nav_h2_design": "Design Process",
    "nav_h3_cad": "&ensp;Cardboard Aided Design",
    "nav_h4_final": "&emsp;Final Design",
    "nav_h3_pcb": "&ensp;Designing the PCB",
    "nav_h3_keymap": "&ensp;My Keymap",
    "nav_h2_discoveries": "Discoveries",
    "nav_h3_plans": "&ensp;Future Plans",
    "nav_h2_bye": "The End",
    "nav_h2_home": "⌂←",
    "sunshine_h1": "Sunshine Experimental Keyboard",
    "sunshine_p1": "The Sunshine Keyboard is a custom, ergonomic, split keyboard I designed and built from scratch. It is an experimental layout focused on minimizing finger travel and maximizing comfort by using a minimal number of keys arranged in layers and accessed through combos.",
    "sunshine_p2": "This project was a deep dive into keyboard design, from physical prototyping with cardboard to designing a custom PCB and programming the firmware. This article documents that journey.",
    "tldr_h2": "Abstract (TL;DR)",
    "tldr_p1": "I designed and built a custom split ergonomic keyboard with only 36 keys. It relies heavily on layers and key combinations (combos) to access all characters, which keeps my fingers on or near the home row at all times. I prototyped the layout with cardboard, designed a custom PCB with unique artwork, and programmed it using QMK firmware. It's weird, but it's comfortable. Check out the typing test video below:",
    "intro_h2": "Background & Motivation",
    "intro_p1": "Like many people who type all day, I've found standard keyboards to be uncomfortable. After trying several commercially available ergonomic keyboards, like the Lily58 pictured here, I found that while they were an improvement, they weren't perfect for me. Many still required uncomfortable finger movements and stretches.",
    "intro_p2": "I wanted something that was built for *my* hands, not the average hand. I was inspired by the minimalist keyboard community, particularly those using keyboards with very few keys (sub-40%). The philosophy is simple: why move your fingers to a key when you can bring the key to your fingers through layers?",
    "intro_p3": "This led me to a simple conclusion: to get the perfect keyboard for me, I'd have to design it myself.",
    "objectives_h2": "Project Objectives",
    "objectives_p1": "Before I started designing, I set out a clear list of goals for the project. These were guided by a central theory of keyboard ergonomics.",
    "objectives_h3_theory": "My Grand Unified Theory of Keyboard Comfort",
    "objectives_h4_phalanges": "Phalanges First: Minimize Movement",
    "objectives_p2": "The core idea is that fingers should not stretch or travel long distances. Each key should be located directly under a finger's natural resting position. The thumb, being the strongest and most flexible digit, should be responsible for activating layers and common modifiers like <kbd>Space</kbd>, <kbd>Enter</kbd>, and <kbd>Backspace</kbd>.",
    "objectives_h4_combos": "Combos and Layers: Reduce Key Count",
    "objectives_p3": "With a limited number of keys, layers are essential. For example, holding down a thumb key might turn the home row `ASDF` into `1234`. Key combinations, or 'combos,' where you press two keys at once to trigger a different action, can further expand functionality without needing more physical keys. For example, pressing <kbd>J</kbd> and <kbd>K</kbd> together could output <kbd>Escape</kbd>.",
    "objectives_p4": "This led to the following concrete design goals:",
    "objectives_li1": "3 rows and 5 columns per hand, plus a thumb cluster.",
    "objectives_li2": "Aggressive column stagger to match natural finger lengths.",
    "objectives_li3": "A comfortable, angled thumb cluster.",
    "objectives_li4": "Heavy reliance on layers and combos to eliminate the need for number rows, function rows, or even some symbol keys.",
    "objectives_li5": "Fully programmable firmware (QMK or ZMK).",
    "objectives_li6": "A unique and personal aesthetic.",
    "objectives_li7": "Must be a split design for shoulder-width posture.",
    "design_h2": "The Design Process",
    "design_p1": "My first concept, which I called the Type-22, was drawn up in a keyboard layout editor. It had a very aggressive pinky stagger and an early idea for the thumb arc.",
    "design_p2": "However, a 2D layout on a screen doesn't tell you how it actually *feels*. For that, I needed to get physical.",
    "cad_h3": "CAD (Cardboard Aided Design)",
    "cad_p1": "Instead of immediately 3D printing a case or ordering a PCB, I turned to a cheaper and faster prototyping material: cardboard. I printed my layout at a 1:1 scale and glued it to a piece of cardboard.",
    "cad_p2": "I then painstakingly cut out switch holes. This allowed me to pop in real mechanical switches and keycaps to test the spacing and stagger.",
    "cad_p3": "This low-fidelity prototype was invaluable. I could immediately feel which columns were off, or if a thumb key was hard to reach. I made several of these cardboard prototypes, tweaking the design each time.",
    "cad_p4": "As a side benefit, typing on cardboard actually sounds surprisingly nice.",
    "final_h3": "Finalizing the Layout",
    "final_p1": "One of the first changes was to the thumb cluster. My initial design had the inner thumb key too far in, requiring an uncomfortable stretch.",
    "final_p2": "The cardboard prototype confirmed this. I adjusted the arc to be tighter and more natural to reach.",
    "final_p3": "Another iteration involved adjusting the pinky column. It turned out to be too low, so I raised it slightly.",
    "final_p4": "After a few more tweaks, I arrived at a layout that felt comfortable and natural. This became the final design that I would base the PCB on.",
    "final_p5": "This final cardboard version was my trusty guide for the rest of the project.",
    "pcb_h3": "Designing the PCB",
    "pcb_p1": "With the physical layout finalized, it was time to design the electronic brain of the keyboard: the Printed Circuit Board (PCB). I used KiCad for this process. For the PCB art, I chose the motto 'ALL IS IN YOUR HANDS'.",
    "pcb_p2": "The schematic is fairly simple for a keyboard. Each switch is part of a matrix, connected with a diode to prevent 'ghosting' (incorrect key presses being registered).",
    "pcb_p3": "I chose to use a Raspberry Pi Pico as the microcontroller because it's cheap, powerful, and well-supported by QMK firmware.",
    "pcb_p4": "The two halves of the keyboard are connected using a TRRS cable, which carries power and the data matrix signal.",
    "pcb_p5": "I added support for Kailh hot-swap sockets, which allow me to change switches easily without soldering.",
    "pcb_p6": "After routing all the traces, which was like solving a puzzle, I added the silkscreen art and generated the Gerber files for manufacturing.",
    "pcb_p7": "I sent the files off to a manufacturer and, a few weeks later, the finished boards arrived!",
    "pcb_p8": "Seeing the design go from a digital file to a physical object was incredibly rewarding.",
    "keymap_h3": "My Personal Keymap",
    "keymap_p1": "A keyboard is nothing without a good keymap. I programmed mine in QMK. It features four primary layers: a base layer for letters, a layer for numbers, a layer for symbols, and a function layer for system controls and F-keys. The layers are accessed by the thumb keys. I also make extensive use of combos for common keys like Escape and Tab.",
    "discoveries_h2": "Discoveries & Results",
    "discoveries_p1": "This project was a huge learning experience. Here are some of the key takeaways:",
    "discoveries_li1": "Prototyping with cardboard is an essential, cheap, and effective step for ergonomic designs.",
    "discoveries_li2": "The angle and position of the thumb cluster are the most critical elements for comfort.",
    "discoveries_li3": "There is a significant learning curve to using layers and combos, but it becomes second nature after a couple of weeks.",
    "discoveries_li4": "Designing a PCB is less intimidating than it seems, thanks to modern open-source software like KiCad.",
    "discoveries_li5": "There is no 'one-size-fits-all' solution for keyboards. Personalization is key.",
    "discoveries_p2": "I also discovered that a case filled with silicone provides excellent sound dampening, but I am still very tempted to just build the final case by layering hot glue, just to see what happens.",
    "plans_h2": "Future Plans",
    "plans_h3_layout": "Layout Revisions (Sunshine V2)",
    "plans_p1": "For a second version, I would experiment with adding a bit of tenting (angling the halves upwards in the middle) and maybe try a more aggressive curvature for the keywell, similar to a Dactyl or Kinesis Advantage keyboard.",
    "plans_h3_features": "New Hardware Features",
    "plans_p2": "I'm interested in adding a small OLED screen to display the current layer, or perhaps a small trackball or trackpad under the thumb to eliminate the need for a mouse.",
    "plans_h3_production": "Production & Sharing",
    "plans_p3": "I plan to release all the design files (KiCad, case models) on GitHub soon. I don't have plans for a group buy, but I hope the files will be useful for others looking to build their own perfect keyboard.",
    "bye_h2": "The End (For Now)",
    "bye_p1": "Thanks for reading about my keyboard journey! Building the Sunshine keyboard has been one of the most challenging and rewarding projects I've ever undertaken. It's not just a tool, but a reflection of a philosophy about how we interact with our computers. If you have any questions, feel free to reach out."
  },
  "he": {
    "sunshine_title": "מקלדת ניסיונית Sunshine",
    "win_gallerynav_title": "◈ מאמר.ניווט",
    "win_gallery_title": "▤ sunshine.article",
    "nav_h2_tldr": "תקציר",
    "nav_h2_intro": "רקע",
    "nav_h2_objectives": "מטרות",
    "nav_h2_design": "תהליך העיצוב",
    "nav_h3_cad": "\u202A&ensp;תכנון בעזרת קרטון\u202C",
    "nav_h4_final": "\u202A&emsp;עיצוב סופי\u202C",
    "nav_h3_pcb": "\u202A&ensp;עיצוב המעגל המודפס\u202C",
    "nav_h3_keymap": "\u202A&ensp;מיפוי המקשים שלי\u202C",
    "nav_h2_discoveries": "תגליות",
    "nav_h3_plans": "\u202A&ensp;תוכניות לעתיד\u202C",
    "nav_h2_bye": "הסוף",
    "nav_h2_home": "⌂←",
    "sunshine_h1": "מקלדת ניסיונית Sunshine",
    "sunshine_p1": "מקלדת Sunshine היא מקלדת מפוצלת, ארגונומית ומותאמת אישית שעיצבתי ובניתי מאפס. זהו פריסה ניסיונית המתמקדת במזעור תנועת האצבעות ובמקסום הנוחות על ידי שימוש במספר מינימלי של מקשים המסודרים בשכבות ונגישים באמצעות קומבינציות.",
    "sunshine_p2": "פרויקט זה היה צלילה עמוקה לעיצוב מקלדות, החל מאב-טיפוס פיזי עם קרטון ועד לעיצוב מעגל מודפס מותאם אישית ותכנות הקושחה. מאמר זה מתעד את המסע הזה.",
    "tldr_h2": "תקציר (ארוך מדי; לא קראתי)",
    "tldr_p1": "עיצבתי ובניתי מקלדת ארגונומית מפוצלת מותאמת אישית עם 36 מקשים בלבד. היא מסתמכת במידה רבה על שכבות וצירופי מקשים (קומבו) כדי לגשת לכל התווים, מה ששומר על אצבעותיי על שורת הבית או בקרבתה בכל עת. בניתי אב-טיפוס של הפריסה מקרטון, עיצבתי מעגל מודפס מותאם אישית עם גרפיקה ייחודית, ותכנתתי אותו באמצעות קושחת QMK. זה מוזר, אבל זה נוח. צפו בסרטון מבחן ההקלדה למטה:",
    "intro_h2": "רקע ומוטיבציה",
    "intro_p1": "כמו אנשים רבים המקלידים כל היום, מצאתי שמקלדות סטנדרטיות אינן נוחות. לאחר שניסיתי מספר מקלדות ארגונומיות מסחריות, כמו ה-Lily58 המוצגת כאן, גיליתי שאף על פי שהן היו שיפור, הן לא היו מושלמות עבורי. רבות מהן עדיין דרשו תנועות ומתיחות אצבעות לא נוחות.",
    "intro_p2": "רציתי משהו שנבנה עבור הידיים *שלי*, לא עבור היד הממוצעת. קיבלתי השראה מקהילת המקלדות המינימליסטיות, במיוחד אלו המשתמשות במקלדות עם מעט מאוד מקשים (פחות מ-40%). הפילוסופיה פשוטה: למה להזיז את האצבעות למקש כשאפשר להביא את המקש לאצבעות דרך שכבות?",
    "intro_p3": "זה הוביל אותי למסקנה פשוטה: כדי להשיג את המקלדת המושלמת עבורי, אצטרך לעצב אותה בעצמי.",
    "objectives_h2": "מטרות הפרויקט",
    "objectives_p1": "לפני שהתחלתי לעצב, קבעתי רשימה ברורה של מטרות לפרויקט. אלה הודרכו על ידי תיאוריה מרכזית של ארגונומיית מקלדות.",
    "objectives_h3_theory": "התיאוריה המאוחדת הגדולה שלי על נוחות מקלדת",
    "objectives_h4_phalanges": "גלילי אצבעות תחילה: מזעור תנועה",
    "objectives_p2": "הרעיון המרכזי הוא שאצבעות לא צריכות להימתח או לעבור מרחקים ארוכים. כל מקש צריך להיות ממוקם ישירות מתחת לתנוחת המנוחה הטבעית של האצבע. האגודל, בהיותו האצבע החזקה והגמישה ביותר, צריך להיות אחראי להפעלת שכבות ומקשי שינוי נפוצים כמו <kbd>רווח</kbd>, <kbd>Enter</kbd>, ו-<kbd>Backspace</kbd>.",
    "objectives_h4_combos": "קומבו ושכבות: הפחתת ספירת המקשים",
    "objectives_p3": "עם מספר מוגבל של מקשים, שכבות הן חיוניות. לדוגמה, החזקת מקש אגודל עשויה להפוך את שורת הבית `ASDF` ל-`1234`. צירופי מקשים, או 'קומבו', שבהם לוחצים על שני מקשים בו-זמנית כדי להפעיל פעולה אחרת, יכולים להרחיב עוד יותר את הפונקציונליות ללא צורך במקשים פיזיים נוספים. לדוגמה, לחיצה על <kbd>J</kbd> ו-<kbd>K</kbd> יחד יכולה להפיק <kbd>Escape</kbd>.",
    "objectives_p4": "זה הוביל למטרות העיצוב הקונקרטיות הבאות:",
    "objectives_li1": "3 שורות ו-5 עמודות לכל יד, בתוספת אשכול אגודל.",
    "objectives_li2": "דירוג עמודות אגרסיבי כדי להתאים לאורכי האצבעות הטבעיים.",
    "objectives_li3": "אשכול אגודל נוח וזוויתי.",
    "objectives_li4": "הסתמכות רבה על שכבות וקומבו כדי לבטל את הצורך בשורות מספרים, שורות פונקציות, או אפילו מקשי סמלים מסוימים.",
    "objectives_li5": "קושחה ניתנת לתכנות מלא (QMK או ZMK).",
    "objectives_li6": "אסתטיקה ייחודית ואישית.",
    "objectives_li7": "חייב להיות עיצוב מפוצל לתנוחת רוחב כתפיים.",
    "design_h2": "תהליך העיצוב",
    "design_p1": "הקונספט הראשון שלי, שקראתי לו Type-22, שורטט בעורך פריסות מקלדת. היה לו דירוג זרת אגרסיבי מאוד ורעיון מוקדם לקשת האגודל.",
    "design_p2": "עם זאת, פריסה דו-ממדית על מסך לא אומרת לך איך זה באמת *מרגיש*. בשביל זה, הייתי צריך להיות פיזי.",
    "cad_h3": "תכנון בעזרת קרטון (CAD)",
    "cad_p1": "במקום להדפיס מיד מארז בתלת-ממד או להזמין מעגל מודפס, פניתי לחומר אב-טיפוס זול ומהיר יותר: קרטון. הדפסתי את הפריסה שלי בקנה מידה 1:1 והדבקתי אותה על חתיכת קרטון.",
    "cad_p2": "לאחר מכן גזרתי בעמל רב חורים למתגים. זה איפשר לי להכניס מתגים מכניים ומקשים אמיתיים כדי לבדוק את הריווח והדירוג.",
    "cad_p3": "אב-טיפוס זה ברמת דיוק נמוכה היה יקר מפז. יכולתי להרגיש מיד אילו עמודות לא היו במקום, או אם מקש אגודל היה קשה להשגה. הכנתי כמה מאבות-הטיפוס הקרטוניים האלה, ושיפרתי את העיצוב בכל פעם.",
    "cad_p4": "כיתרון צדדי, הקלדה על קרטון נשמעת למעשה נחמדה באופן מפתיע.",
    "final_h3": "סיום הפריסה",
    "final_p1": "אחד השינויים הראשונים היה באשכול האגודל. העיצוב הראשוני שלי מיקם את מקש האגודל הפנימי רחוק מדי פנימה, מה שדרש מתיחה לא נוחה.",
    "final_p2": "אב-הטיפוס מקרטון אישר זאת. התאמתי את הקשת להיות הדוקה יותר וטבעית יותר להשגה.",
    "final_p3": "איטרציה נוספת כללה התאמת עמודת הזרת. התברר שהיא נמוכה מדי, אז הרמתי אותה מעט.",
    "final_p4": "לאחר עוד כמה שיפורים, הגעתי לפריסה שהרגישה נוחה וטבעית. זה הפך לעיצוב הסופי שעליו אבסס את המעגל המודפס.",
    "final_p5": "גרסת הקרטון הסופית הזו הייתה המדריך הנאמן שלי לשאר הפרויקט.",
    "pcb_h3": "עיצוב המעגל המודפס",
    "pcb_p1": "לאחר סיום הפריסה הפיזית, הגיע הזמן לעצב את המוח האלקטרוני של המקלדת: המעגל המודפס (PCB). השתמשתי ב-KiCad לתהליך זה. לאמנות המעגל בחרתי במוטו 'הכל בידיים שלך'.",
    "pcb_p2": "הסכמה פשוטה למדי עבור מקלדת. כל מתג הוא חלק ממטריצה, מחובר עם דיודה כדי למנוע 'ghosting' (רישום לחיצות מקשים שגויות).",
    "pcb_p3": "בחרתי להשתמש ב-Raspberry Pi Pico כמיקרו-בקר כי הוא זול, חזק, ונתמך היטב על ידי קושחת QMK.",
    "pcb_p4": "שני חצאי המקלדת מחוברים באמצעות כבל TRRS, הנושא חשמל ואת אות נתוני המטריצה.",
    "pcb_p5": "הוספתי תמיכה בשקעי hot-swap של Kailh, המאפשרים לי להחליף מתגים בקלות ללא הלחמה.",
    "pcb_p6": "לאחר ניתוב כל המסלולים, שהיה כמו פתרון פאזל, הוספתי את אמנות הדפסת המשי ויצרתי את קבצי הגרבר לייצור.",
    "pcb_p7": "שלחתי את הקבצים ליצרן, וכמה שבועות לאחר מכן, הלוחות המוגמרים הגיעו!",
    "pcb_p8": "לראות את העיצוב עובר מקובץ דיגיטלי לאובייקט פיזי היה מתגמל להפליא.",
    "keymap_h3": "מיפוי המקשים האישי שלי",
    "keymap_p1": "מקלדת היא כלום בלי מיפוי מקשים טוב. תכנתתי את שלי ב-QMK. היא כוללת ארבע שכבות עיקריות: שכבת בסיס לאותיות, שכבה למספרים, שכבה לסמלים ושכבת פונקציות לבקרות מערכת ומקשי F. השכבות נגישות באמצעות מקשי האגודל. אני גם עושה שימוש נרחב בקומבו עבור מקשים נפוצים כמו Escape ו-Tab.",
    "discoveries_h2": "תגליות ותוצאות",
    "discoveries_p1": "פרויקט זה היה חווית למידה ענקית. הנה כמה מהמסקנות העיקריות:",
    "discoveries_li1": "יצירת אב-טיפוס מקרטון היא שלב חיוני, זול ויעיל לעיצובים ארגונומיים.",
    "discoveries_li2": "הזווית והמיקום של אשכול האגודל הם המרכיבים הקריטיים ביותר לנוחות.",
    "discoveries_li3": "יש עקומת למידה משמעותית לשימוש בשכבות וקומבו, אבל זה הופך לטבע שני לאחר כמה שבועות.",
    "discoveries_li4": "עיצוב מעגל מודפס פחות מאיים ממה שזה נראה, הודות לתוכנות קוד פתוח מודרניות כמו KiCad.",
    "discoveries_li5": "אין פתרון 'מידה אחת מתאימה לכולם' למקלדות. התאמה אישית היא המפתח.",
    "discoveries_p2": "גיליתי גם שמארז מלא בסיליקון מספק שיכוך קול מעולה, אבל אני עדיין מתפתה מאוד פשוט לבנות את המארז הסופי על ידי שכבות של דבק חם, רק כדי לראות מה יקרה.",
    "plans_h2": "תוכניות לעתיד",
    "plans_h3_layout": "שינויים בפריסה (Sunshine V2)",
    "plans_p1": "לגרסה שנייה, הייתי מתנסה בהוספת מעט אוהל (זווית החצאים כלפי מעלה באמצע) ואולי אנסה עקמומיות אגרסיבית יותר עבור שקעי המקשים, בדומה למקלדת Dactyl או Kinesis Advantage.",
    "plans_h3_features": "תכונות חומרה חדשות",
    "plans_p2": "אני מעוניין להוסיף מסך OLED קטן כדי להציג את השכבה הנוכחית, או אולי כדור עקיבה קטן או משטח עקיבה מתחת לאגודל כדי לבטל את הצורך בעכבר.",
    "plans_h3_production": "ייצור ושיתוף",
    "plans_p3": "אני מתכנן לשחרר את כל קבצי העיצוב (KiCad, מודלים של מארז) ב-GitHub בקרוב. אין לי תוכניות לרכישה קבוצתית, אבל אני מקווה שהקבצים יהיו שימושיים לאחרים המעוניינים לבנות את המקלדת המושלמת שלהם.",
    "bye_h2": "הסוף (בינתיים)",
    "bye_p1": "תודה שקראתם על מסע המקלדת שלי! בניית מקלדת Sunshine הייתה אחד הפרויקטים המאתגרים והמתגמלים ביותר שלקחתי על עצמי. זה לא רק כלי, אלא השתקפות של פילוסופיה על האופן שבו אנו מתקשרים עם המחשבים שלנו. אם יש לכם שאלות, אתם מוזמנים לפנות אליי."
  },
  "ru": {
    "sunshine_title": "Экспериментальная клавиатура Sunshine",
    "win_gallerynav_title": "◈ статья.nav",
    "win_gallery_title": "▤ sunshine.article",
    "nav_h2_tldr": "Краткое содержание",
    "nav_h2_intro": "Предыстория",
    "nav_h2_objectives": "Цели",
    "nav_h2_design": "Процесс проектирования",
    "nav_h3_cad": "&ensp;Проектирование с помощью картона",
    "nav_h4_final": "&emsp;Окончательный дизайн",
    "nav_h3_pcb": "&ensp;Проектирование печатной платы",
    "nav_h3_keymap": "&ensp;Моя раскладка",
    "nav_h2_discoveries": "Открытия",
    "nav_h3_plans": "&ensp;Планы на будущее",
    "nav_h2_bye": "Конец",
    "nav_h2_home": "⌂←",
    "sunshine_h1": "Экспериментальная клавиатура Sunshine",
    "sunshine_p1": "Sunshine Keyboard — это кастомная, эргономичная, разделенная клавиатура, которую я спроектировала и собрала с нуля. Это экспериментальная раскладка, ориентированная на минимизацию движений пальцев и максимизацию комфорта за счет использования минимального количества клавиш, расположенных на слоях и доступных через комбинации.",
    "sunshine_p2": "Этот проект стал глубоким погружением в дизайн клавиатур, от физического прототипирования с помощью картона до проектирования собственной печатной платы и программирования прошивки. Эта статья документирует этот путь.",
    "tldr_h2": "Краткое содержание (TL;DR)",
    "tldr_p1": "Я спроектировала и собрала кастомную разделенную эргономичную клавиатуру всего с 36 клавишами. Она в значительной степени полагается на слои и комбинации клавиш (комбо) для доступа ко всем символам, что позволяет моим пальцам всегда оставаться на домашнем ряду или рядом с ним. Я создала прототип раскладки из картона, спроектировала собственную печатную плату с уникальным рисунком и запрограммировала ее с помощью прошивки QMK. Она странная, но удобная. Посмотрите видео с тестом печати ниже:",
    "intro_h2": "Предыстория и мотивация",
    "intro_p1": "Как и многие люди, которые печатают весь день, я нахожу стандартные клавиатуры неудобными. Попробовав несколько коммерчески доступных эргономичных клавиатур, таких как Lily58, изображенная здесь, я обнаружила, что, хотя они и были улучшением, они не были идеальными для меня. Многие все еще требовали неудобных движений и растяжек пальцев.",
    "intro_p2": "Я хотела что-то, что было бы создано для *моих* рук, а не для среднестатистической руки. Меня вдохновило сообщество минималистичных клавиатур, особенно тех, кто использует клавиатуры с очень небольшим количеством клавиш (менее 40%). Философия проста: зачем двигать пальцы к клавише, если можно подвести клавишу к пальцам с помощью слоев?",
    "intro_p3": "Это привело меня к простому выводу: чтобы получить идеальную для меня клавиатуру, мне придется спроектировать ее самой.",
    "objectives_h2": "Цели проекта",
    "objectives_p1": "Прежде чем начать проектирование, я составила четкий список целей для проекта. Они были основаны на центральной теории эргономики клавиатур.",
    "objectives_h3_theory": "Моя Великая Объединенная Теория Комфорта Клавиатуры",
    "objectives_h4_phalanges": "Сначала фаланги: минимизация движений",
    "objectives_p2": "Основная идея заключается в том, что пальцы не должны растягиваться или перемещаться на большие расстояния. Каждая клавиша должна располагаться непосредственно под естественным положением покоя пальца. Большой палец, будучи самым сильным и гибким, должен отвечать за активацию слоев и общих модификаторов, таких как <kbd>Пробел</kbd>, <kbd>Enter</kbd> и <kbd>Backspace</kbd>.",
    "objectives_h4_combos": "Комбо и слои: сокращение количества клавиш",
    "objectives_p3": "При ограниченном количестве клавиш слои необходимы. Например, удержание клавиши большого пальца может превратить домашний ряд `ASDF` в `1234`. Комбинации клавиш, или 'комбо', когда вы нажимаете две клавиши одновременно для выполнения другого действия, могут еще больше расширить функциональность без необходимости в дополнительных физических клавишах. Например, одновременное нажатие <kbd>J</kbd> и <kbd>K</kbd> может выводить <kbd>Escape</kbd>.",
    "objectives_p4": "Это привело к следующим конкретным целям проектирования:",
    "objectives_li1": "3 ряда и 5 столбцов на каждую руку, плюс кластер для большого пальца.",
    "objectives_li2": "Агрессивное смещение столбцов в соответствии с естественной длиной пальцев.",
    "objectives_li3": "Удобный, расположенный под углом кластер для большого пальца.",
    "objectives_li4": "Сильная зависимость от слоев и комбо для устранения необходимости в цифровом ряду, функциональном ряду и даже некоторых символьных клавишах.",
    "objectives_li5": "Полностью программируемая прошивка (QMK или ZMK).",
    "objectives_li6": "Уникальная и личная эстетика.",
    "objectives_li7": "Должна быть разделенной конструкцией для позы на ширине плеч.",
    "design_h2": "Процесс проектирования",
    "design_p1": "Моя первая концепция, которую я назвала Type-22, была нарисована в редакторе раскладок клавиатуры. У нее было очень агрессивное смещение для мизинца и ранняя идея дуги для большого пальца.",
    "design_p2": "Однако 2D-раскладка на экране не говорит вам, как она на самом деле *ощущается*. Для этого мне нужно было что-то физическое.",
    "cad_h3": "Проектирование с помощью картона (CAD)",
    "cad_p1": "Вместо того чтобы немедленно печатать корпус на 3D-принтере или заказывать печатную плату, я обратилась к более дешевому и быстрому материалу для прототипирования: картону. Я распечатала свою раскладку в масштабе 1:1 и приклеила ее к куску картона.",
    "cad_p2": "Затем я кропотливо вырезала отверстия для переключателей. Это позволило мне вставить настоящие механические переключатели и колпачки для клавиш, чтобы проверить расстояние и смещение.",
    "cad_p3": "Этот низкокачественный прототип был бесценен. Я могла сразу почувствовать, какие столбцы смещены, или если до клавиши большого пальца трудно дотянуться. Я сделала несколько таких картонных прототипов, каждый раз дорабатывая дизайн.",
    "cad_p4": "В качестве побочного преимущества, печать на картоне на самом деле звучит на удивление приятно.",
    "final_h3": "Завершение раскладки",
    "final_p1": "Одним из первых изменений был кластер для большого пальца. В моем первоначальном дизайне внутренняя клавиша большого пальца была слишком далеко, что требовало неудобной растяжки.",
    "final_p2": "Картонный прототип это подтвердил. Я скорректировала дугу, чтобы она была более плотной и естественной для досягаемости.",
    "final_p3": "Другая итерация включала корректировку столбца для мизинца. Оказалось, что он слишком низкий, поэтому я немного его подняла.",
    "final_p4": "После еще нескольких доработок я пришла к раскладке, которая казалась удобной и естественной. Это стало окончательным дизайном, на котором я буду основывать печатную плату.",
    "final_p5": "Эта окончательная картонная версия была моим верным проводником до конца проекта.",
    "pcb_h3": "Проектирование печатной платы",
    "pcb_p1": "После завершения физической раскладки пришло время спроектировать электронный мозг клавиатуры: печатную плату (PCB). Я использовала KiCad для этого процесса. Для рисунка на плате я выбрала девиз 'ВСЕ В ВАШИХ РУКАХ'.",
    "pcb_p2": "Схема для клавиатуры довольно проста. Каждый переключатель является частью матрицы, соединенной диодом для предотвращения 'ghosting' (регистрации неверных нажатий клавиш).",
    "pcb_p3": "Я выбрала Raspberry Pi Pico в качестве микроконтроллера, потому что он дешевый, мощный и хорошо поддерживается прошивкой QMK.",
    "pcb_p4": "Две половины клавиатуры соединены с помощью кабеля TRRS, который передает питание и сигнал матрицы данных.",
    "pcb_p5": "Я добавила поддержку сокетов Kailh для горячей замены, что позволяет мне легко менять переключатели без пайки.",
    "pcb_p6": "После разводки всех дорожек, что было похоже на решение головоломки, я добавила шелкографию и сгенерировала файлы Gerber для производства.",
    "pcb_p7": "Я отправила файлы производителю и через несколько недель готовые платы прибыли!",
    "pcb_p8": "Видеть, как дизайн превращается из цифрового файла в физический объект, было невероятно приятно.",
    "keymap_h3": "Моя личная раскладка",
    "keymap_p1": "Клавиатура - ничто без хорошей раскладки. Я запрограммировала свою в QMK. Она включает четыре основных слоя: базовый слой для букв, слой для цифр, слой для символов и функциональный слой для системных элементов управления и F-клавиш. Слои доступны с помощью клавиш большого пальца. Я также широко использую комбо для общих клавиш, таких как Escape и Tab.",
    "discoveries_h2": "Открытия и результаты",
    "discoveries_p1": "Этот проект стал огромным опытом обучения. Вот некоторые из ключевых выводов:",
    "discoveries_li1": "Прототипирование с помощью картона - важный, дешевый и эффективный шаг для эргономичного дизайна.",
    "discoveries_li2": "Угол и положение кластера для большого пальца - самые важные элементы для комфорта.",
    "discoveries_li3": "Существует значительная кривая обучения для использования слоев и комбо, но это становится второй натурой через пару недель.",
    "discoveries_li4": "Проектирование печатной платы менее пугающе, чем кажется, благодаря современному программному обеспечению с открытым исходным кодом, такому как KiCad.",
    "discoveries_li5": "Для клавиатур не существует универсального решения. Персонализация - ключ к успеху.",
    "discoveries_p2": "Я также обнаружила, что корпус, заполненный силиконом, обеспечивает отличное звукопоглощение, но меня все еще очень соблазняет просто собрать финальный корпус, наслоив горячий клей, просто чтобы посмотреть, что получится.",
    "plans_h2": "Планы на будущее",
    "plans_h3_layout": "Изменения раскладки (Sunshine V2)",
    "plans_p1": "Во второй версии я бы поэкспериментировала с добавлением небольшого наклона (расположение половинок под углом вверх в середине) и, возможно, попробовала бы более агрессивную кривизну для углублений клавиш, подобно клавиатуре Dactyl или Kinesis Advantage.",
    "plans_h3_features": "Новые аппаратные функции",
    "plans_p2": "Мне интересно добавить небольшой OLED-экран для отображения текущего слоя, или, возможно, небольшой трекбол или трекпад под большим пальцем, чтобы устранить необходимость в мыши.",
    "plans_h3_production": "Производство и распространение",
    "plans_p3": "Я планирую в ближайшее время выложить все файлы дизайна (KiCad, модели корпуса) на GitHub. У меня нет планов на групповую покупку, но я надеюсь, что файлы будут полезны другим, кто хочет создать свою идеальную клавиатуру.",
    "bye_h2": "Конец (на данный момент)",
    "bye_p1": "Спасибо, что прочитали о моем путешествии в мир клавиатур! Создание клавиатуры Sunshine было одним из самых сложных и полезных проектов, которые я когда-либо предпринимала. Это не просто инструмент, а отражение философии о том, как мы взаимодействуем с нашими компьютерами. Если у вас есть вопросы, не стесняйтесь обращаться."
  },
  "de": {
    "sunshine_title": "Sunshine Experimentelle Tastatur",
    "win_gallerynav_title": "◈ artikel.nav",
    "win_gallery_title": "▤ sunshine.article",
    "nav_h2_tldr": "Zusammenfassung",
    "nav_h2_intro": "Hintergrund",
    "nav_h2_objectives": "Ziele",
    "nav_h2_design": "Designprozess",
    "nav_h3_cad": "&ensp;Papp-gestütztes Design",
    "nav_h4_final": "&emsp;Endgültiges Design",
    "nav_h3_pcb": "&ensp;Design der Leiterplatte",
    "nav_h3_keymap": "&ensp;Meine Tastenbelegung",
    "nav_h2_discoveries": "Erkenntnisse",
    "nav_h3_plans": "&ensp;Zukunftspläne",
    "nav_h2_bye": "Das Ende",
    "nav_h2_home": "⌂←",
    "sunshine_h1": "Sunshine Experimentelle Tastatur",
    "sunshine_p1": "Die Sunshine-Tastatur ist eine benutzerdefinierte, ergonomische, geteilte Tastatur, die ich von Grund auf entworfen und gebaut habe. Es handelt sich um ein experimentelles Layout, das darauf abzielt, die Fingerbewegungen zu minimieren und den Komfort zu maximieren, indem eine minimale Anzahl von Tasten verwendet wird, die in Ebenen angeordnet sind und über Kombinationen aufgerufen werden.",
    "sunshine_p2": "Dieses Projekt war ein tiefer Einblick in das Tastaturdesign, vom physischen Prototyping mit Pappe über das Design einer benutzerdefinierten Leiterplatte bis hin zur Programmierung der Firmware. Dieser Artikel dokumentiert diese Reise.",
    "tldr_h2": "Zusammenfassung (TL;DR)",
    "tldr_p1": "Ich habe eine benutzerdefinierte geteilte ergonomische Tastatur mit nur 36 Tasten entworfen und gebaut. Sie stützt sich stark auf Ebenen und Tastenkombinationen (Combos), um auf alle Zeichen zuzugreifen, was meine Finger jederzeit auf oder in der Nähe der Grundreihe hält. Ich habe das Layout mit Pappe prototypisiert, eine benutzerdefinierte Leiterplatte mit einzigartiger Grafik entworfen und sie mit QMK-Firmware programmiert. Es ist seltsam, aber es ist bequem. Schauen Sie sich das Tipptest-Video unten an:",
    "intro_h2": "Hintergrund & Motivation",
    "intro_p1": "Wie viele Leute, die den ganzen Tag tippen, finde ich Standardtastaturen unbequem. Nachdem ich mehrere im Handel erhältliche ergonomische Tastaturen ausprobiert hatte, wie die hier abgebildete Lily58, stellte ich fest, dass sie zwar eine Verbesserung darstellten, aber nicht perfekt für mich waren. Viele erforderten immer noch unbequeme Fingerbewegungen und Dehnungen.",
    "intro_p2": "Ich wollte etwas, das für *meine* Hände gebaut war, nicht für die Durchschnittshand. Ich wurde von der minimalistischen Tastatur-Community inspiriert, insbesondere von denen, die Tastaturen mit sehr wenigen Tasten (unter 40%) verwenden. Die Philosophie ist einfach: Warum die Finger zu einer Taste bewegen, wenn man die Taste durch Ebenen zu den Fingern bringen kann?",
    "intro_p3": "Dies führte mich zu einer einfachen Schlussfolgerung: Um die perfekte Tastatur für mich zu bekommen, musste ich sie selbst entwerfen.",
    "objectives_h2": "Projektziele",
    "objectives_p1": "Bevor ich mit dem Entwerfen begann, legte ich eine klare Liste von Zielen für das Projekt fest. Diese wurden von einer zentralen Theorie der Tastaturergonomie geleitet.",
    "objectives_h3_theory": "Meine große vereinheitlichte Theorie des Tastaturkomforts",
    "objectives_h4_phalanges": "Phalangen zuerst: Bewegung minimieren",
    "objectives_p2": "Die Kernidee ist, dass die Finger sich nicht strecken oder weite Strecken zurücklegen sollten. Jede Taste sollte sich direkt unter der natürlichen Ruheposition eines Fingers befinden. Der Daumen, als stärkster und flexibelster Finger, sollte für die Aktivierung von Ebenen und gängigen Modifikatoren wie <kbd>Leertaste</kbd>, <kbd>Enter</kbd> und <kbd>Backspace</kbd> verantwortlich sein.",
    "objectives_h4_combos": "Combos und Ebenen: Tastenanzahl reduzieren",
    "objectives_p3": "Bei einer begrenzten Anzahl von Tasten sind Ebenen unerlässlich. Zum Beispiel könnte das Gedrückthalten einer Daumentaste die Grundreihe `ASDF` in `1234` verwandeln. Tastenkombinationen oder 'Combos', bei denen man zwei Tasten gleichzeitig drückt, um eine andere Aktion auszulösen, können die Funktionalität weiter erweitern, ohne mehr physische Tasten zu benötigen. Zum Beispiel könnte das gemeinsame Drücken von <kbd>J</kbd> und <kbd>K</kbd> <kbd>Escape</kbd> ausgeben.",
    "objectives_p4": "Dies führte zu den folgenden konkreten Designzielen:",
    "objectives_li1": "3 Reihen und 5 Spalten pro Hand, plus ein Daumencluster.",
    "objectives_li2": "Aggressiver Spaltenversatz, um den natürlichen Fingerlängen zu entsprechen.",
    "objectives_li3": "Ein bequemer, abgewinkelter Daumencluster.",
    "objectives_li4": "Starke Abhängigkeit von Ebenen und Combos, um die Notwendigkeit von Zahlenreihen, Funktionsreihen oder sogar einigen Symboltasten zu eliminieren.",
    "objectives_li5": "Vollständig programmierbare Firmware (QMK oder ZMK).",
    "objectives_li6": "Eine einzigartige und persönliche Ästhetik.",
    "objectives_li7": "Muss ein geteiltes Design für eine schulterbreite Haltung sein.",
    "design_h2": "Der Designprozess",
    "design_p1": "Mein erstes Konzept, das ich Type-22 nannte, wurde in einem Tastaturlayout-Editor entworfen. Es hatte einen sehr aggressiven Versatz für den kleinen Finger und eine frühe Idee für den Daumenbogen.",
    "design_p2": "Ein 2D-Layout auf einem Bildschirm sagt einem jedoch nicht, wie es sich tatsächlich *anfühlt*. Dafür musste ich physisch werden.",
    "cad_h3": "CAD (Papp-gestütztes Design)",
    "cad_p1": "Anstatt sofort ein Gehäuse in 3D zu drucken oder eine Leiterplatte zu bestellen, griff ich zu einem billigeren und schnelleren Prototyping-Material: Pappe. Ich druckte mein Layout im Maßstab 1:1 aus und klebte es auf ein Stück Pappe.",
    "cad_p2": "Dann schnitt ich mühsam die Löcher für die Schalter aus. Dies ermöglichte es mir, echte mechanische Schalter und Tastenkappen einzusetzen, um den Abstand und den Versatz zu testen.",
    "cad_p3": "Dieser Low-Fidelity-Prototyp war von unschätzbarem Wert. Ich konnte sofort spüren, welche Spalten falsch platziert waren oder ob eine Daumentaste schwer zu erreichen war. Ich habe mehrere dieser Papp-Prototypen hergestellt und das Design jedes Mal optimiert.",
    "cad_p4": "Als Nebeneffekt klingt das Tippen auf Pappe tatsächlich überraschend gut.",
    "final_h3": "Finalisierung des Layouts",
    "final_p1": "Eine der ersten Änderungen betraf den Daumencluster. Mein ursprüngliches Design hatte die innere Daumentaste zu weit innen, was eine unbequeme Dehnung erforderte.",
    "final_p2": "Der Papp-Prototyp bestätigte dies. Ich passte den Bogen an, um ihn enger und natürlicher erreichbar zu machen.",
    "final_p3": "Eine weitere Iteration umfasste die Anpassung der Spalte für den kleinen Finger. Es stellte sich heraus, dass sie zu niedrig war, also hob ich sie leicht an.",
    "final_p4": "Nach ein paar weiteren Optimierungen kam ich zu einem Layout, das sich bequem und natürlich anfühlte. Dies wurde das endgültige Design, auf dem ich die Leiterplatte basieren würde.",
    "final_p5": "Diese endgültige Pappversion war mein treuer Leitfaden für den Rest des Projekts.",
    "pcb_h3": "Design der Leiterplatte",
    "pcb_p1": "Nachdem das physische Layout fertiggestellt war, war es an der Zeit, das elektronische Gehirn der Tastatur zu entwerfen: die Leiterplatte (PCB). Ich habe KiCad für diesen Prozess verwendet. Für die Leiterplattenkunst wählte ich das Motto 'ALLES LIEGT IN DEINEN HÄNDEN'.",
    "pcb_p2": "Der Schaltplan für eine Tastatur ist ziemlich einfach. Jeder Schalter ist Teil einer Matrix, verbunden mit einer Diode, um 'Ghosting' (fälschlicherweise registrierte Tastendrücke) zu verhindern.",
    "pcb_p3": "Ich entschied mich für einen Raspberry Pi Pico als Mikrocontroller, weil er billig, leistungsstark und gut von der QMK-Firmware unterstützt wird.",
    "pcb_p4": "Die beiden Hälften der Tastatur sind über ein TRRS-Kabel verbunden, das Strom und das Datenmatrixsignal überträgt.",
    "pcb_p5": "Ich habe Unterstützung für Kailh-Hot-Swap-Sockel hinzugefügt, die es mir ermöglichen, Schalter einfach ohne Löten zu wechseln.",
    "pcb_p6": "Nachdem ich alle Leiterbahnen verlegt hatte, was wie das Lösen eines Puzzles war, fügte ich die Siebdruckkunst hinzu und erstellte die Gerber-Dateien für die Herstellung.",
    "pcb_p7": "Ich schickte die Dateien an einen Hersteller und einige Wochen später kamen die fertigen Platinen an!",
    "pcb_p8": "Zu sehen, wie das Design von einer digitalen Datei zu einem physischen Objekt wurde, war unglaublich lohnend.",
    "keymap_h3": "Meine persönliche Tastenbelegung",
    "keymap_p1": "Eine Tastatur ist nichts ohne eine gute Tastenbelegung. Ich habe meine in QMK programmiert. Sie verfügt über vier primäre Ebenen: eine Basisebene für Buchstaben, eine Ebene für Zahlen, eine Ebene für Symbole und eine Funktionsebene für Systemsteuerungen und F-Tasten. Der Zugriff auf die Ebenen erfolgt über die Daumentasten. Ich nutze auch ausgiebig Combos für häufig verwendete Tasten wie Escape und Tab.",
    "discoveries_h2": "Erkenntnisse & Ergebnisse",
    "discoveries_p1": "Dieses Projekt war eine riesige Lernerfahrung. Hier sind einige der wichtigsten Erkenntnisse:",
    "discoveries_li1": "Das Prototyping mit Pappe ist ein wesentlicher, billiger und effektiver Schritt für ergonomische Designs.",
    "discoveries_li2": "Der Winkel und die Position des Daumenclusters sind die kritischsten Elemente für den Komfort.",
    "discoveries_li3": "Es gibt eine erhebliche Lernkurve bei der Verwendung von Ebenen und Combos, aber nach ein paar Wochen wird es zur zweiten Natur.",
    "discoveries_li4": "Das Design einer Leiterplatte ist weniger einschüchternd, als es scheint, dank moderner Open-Source-Software wie KiCad.",
    "discoveries_li5": "Es gibt keine 'Einheitsgröße'-Lösung für Tastaturen. Personalisierung ist der Schlüssel.",
    "discoveries_p2": "Ich habe auch entdeckt, dass ein mit Silikon gefülltes Gehäuse eine ausgezeichnete Schalldämpfung bietet, aber ich bin immer noch sehr versucht, das endgültige Gehäuse einfach durch Schichten von Heißkleber zu bauen, nur um zu sehen, was passiert.",
    "plans_h2": "Zukunftspläne",
    "plans_h3_layout": "Layout-Überarbeitungen (Sunshine V2)",
    "plans_p1": "Für eine zweite Version würde ich mit dem Hinzufügen von etwas Tenting (Anwinkeln der Hälften in der Mitte nach oben) experimentieren und vielleicht eine aggressivere Krümmung für die Tastenmulde ausprobieren, ähnlich einer Dactyl- oder Kinesis Advantage-Tastatur.",
    "plans_h3_features": "Neue Hardware-Funktionen",
    "plans_p2": "Ich bin daran interessiert, einen kleinen OLED-Bildschirm hinzuzufügen, um die aktuelle Ebene anzuzeigen, oder vielleicht einen kleinen Trackball oder ein Trackpad unter dem Daumen, um die Notwendigkeit einer Maus zu eliminieren.",
    "plans_h3_production": "Produktion & Teilen",
    "plans_p3": "Ich plane, alle Designdateien (KiCad, Gehäusemodelle) bald auf GitHub zu veröffentlichen. Ich habe keine Pläne für einen Group Buy, aber ich hoffe, die Dateien werden für andere nützlich sein, die ihre eigene perfekte Tastatur bauen möchten.",
    "bye_h2": "Das Ende (vorerst)",
    "bye_p1": "Danke, dass du über meine Tastaturreise gelesen hast! Der Bau der Sunshine-Tastatur war eines der herausforderndsten und lohnendsten Projekte, die ich je unternommen habe. Es ist nicht nur ein Werkzeug, sondern ein Spiegelbild einer Philosophie darüber, wie wir mit unseren Computern interagieren. Wenn du Fragen hast, zögere nicht, dich zu melden."
  },
  "ja": {
    "sunshine_title": "サンシャイン実験キーボード",
    "win_gallerynav_title": "◈ 記事.nav",
    "win_gallery_title": "▤ sunshine.article",
    "nav_h2_tldr": "要約",
    "nav_h2_intro": "背景",
    "nav_h2_objectives": "目的",
    "nav_h2_design": "設計プロセス",
    "nav_h3_cad": "&ensp;段ボール支援設計",
    "nav_h4_final": "&emsp;最終設計",
    "nav_h3_pcb": "&ensp;PCBの設計",
    "nav_h3_keymap": "&ensp;私のキーマップ",
    "nav_h2_discoveries": "発見",
    "nav_h3_plans": "&ensp;今後の計画",
    "nav_h2_bye": "おわり",
    "nav_h2_home": "⌂←",
    "sunshine_h1": "サンシャイン実験キーボード",
    "sunshine_p1": "サンシャインキーボードは、私がゼロから設計・製作したカスタムのエルゴノミクス分割キーボードです。レイヤーに配置された最小限のキーをコンボでアクセスすることで、指の移動を最小限に抑え、快適性を最大限に高めることを目的とした実験的なレイアウトです。",
    "sunshine_p2": "このプロジェクトは、段ボールによる物理的なプロトタイピングから、カスタムPCBの設計、ファームウェアのプログラミングまで、キーボード設計の深い探求でした。この記事では、その道のりを記録しています。",
    "tldr_h2": "要約 (TL;DR)",
    "tldr_p1": "私はわずか36キーのカスタム分割エルゴノミクスキーボードを設計・製作しました。すべての文字にアクセスするためにレイヤーとキーの組み合わせ（コンボ）に大きく依存しており、これにより指は常にホームポジションまたはその近くに留まります。段ボールでレイアウトのプロトタイプを作成し、ユニークなアートワークを持つカスタムPCBを設計し、QMKファームウェアでプログラムしました。奇妙ですが、快適です。以下のタイピングテストビデオをご覧ください：",
    "intro_h2": "背景と動機",
    "intro_p1": "一日中タイピングする多くの人々と同様に、私も標準的なキーボードは不快だと感じていました。ここに写っているLily58のような市販のエルゴノミクスキーボードをいくつか試しましたが、改善はされたものの、私にとって完璧ではありませんでした。多くは依然として不快な指の動きや伸ばしを必要としました。",
    "intro_p2": "私は平均的な手ではなく、*私の*手のために作られたものが欲しかったのです。私はミニマリストキーボードのコミュニティ、特に非常に少ないキー（40%未満）を使用している人々に触発されました。その哲学は単純です：レイヤーを通じてキーを指に近づけることができるのに、なぜ指をキーに移動させる必要があるのでしょうか？",
    "intro_p3": "これは私を単純な結論に導きました：私にとって完璧なキーボードを手に入れるには、自分で設計するしかないと。",
    "objectives_h2": "プロジェクトの目的",
    "objectives_p1": "設計を始める前に、プロジェクトの明確な目標リストを設定しました。これらはキーボードエルゴノミクスに関する中心的な理論に導かれました。",
    "objectives_h3_theory": "私のキーボード快適性に関する大統一理論",
    "objectives_h4_phalanges": "指骨第一：動きの最小化",
    "objectives_p2": "中心的な考え方は、指を伸ばしたり長距離を移動させたりすべきではないということです。各キーは指の自然な休息位置の真下に配置されるべきです。最も強くて柔軟な指である親指は、レイヤーの有効化や<kbd>スペース</kbd>、<kbd>Enter</kbd>、<kbd>Backspace</kbd>などの一般的な修飾キーを担当すべきです。",
    "objectives_h4_combos": "コンボとレイヤー：キー数の削減",
    "objectives_p3": "限られた数のキーでは、レイヤーが不可欠です。例えば、親指キーを押し続けると、ホームポジションの`ASDF`が`1234`に変わるかもしれません。キーの組み合わせ、つまり「コンボ」は、2つのキーを同時に押して別のアクションをトリガーすることで、物理的なキーを増やさずに機能をさらに拡張できます。例えば、<kbd>J</kbd>と<kbd>K</kbd>を同時に押すと<kbd>Escape</kbd>が出力されるかもしれません。",
    "objectives_p4": "これにより、以下の具体的な設計目標が導き出されました：",
    "objectives_li1": "片手につき3行5列、プラス親指クラスター。",
    "objectives_li2": "自然な指の長さに合わせた積極的なカラムスタッガー。",
    "objectives_li3": "快適で角度のついた親指クラスター。",
    "objectives_li4": "数字行、ファンクション行、さらには一部の記号キーの必要性をなくすためのレイヤーとコンボへの強い依存。",
    "objectives_li5": "完全にプログラム可能なファームウェア（QMKまたはZMK）。",
    "objectives_li6": "ユニークで個人的な美学。",
    "objectives_li7": "肩幅の姿勢のための分割設計であること。",
    "design_h2": "設計プロセス",
    "design_p1": "私がType-22と呼んだ最初のコンセプトは、キーボードレイアウトエディタで作成されました。非常に攻撃的な小指のスタッガーと、親指のアークに関する初期のアイデアがありました。",
    "design_p2": "しかし、画面上の2Dレイアウトでは、実際に*どう感じる*かはわかりません。そのためには、物理的なものが必要でした。",
    "cad_h3": "CAD（段ボール支援設計）",
    "cad_p1": "すぐに3Dプリントケースを作成したりPCBを注文したりする代わりに、より安価で迅速なプロトタイピング材料である段ボールに目を向けました。レイアウトを1:1スケールで印刷し、段ボールに貼り付けました。",
    "cad_p2": "次に、丹念にスイッチの穴を切り抜きました。これにより、本物のメカニカルスイッチとキーキャップを取り付けて、間隔とスタッガーをテストすることができました。",
    "cad_p3": "この低忠実度のプロトタイプは非常に貴重でした。どの列がずれているか、親指キーが届きにくいかをすぐに感じることができました。私はこれらの段ボールプロトタイプをいくつか作成し、その都度デザインを微調整しました。",
    "cad_p4": "副次的な利点として、段ボールでタイピングすると驚くほど良い音がします。",
    "final_h3": "レイアウトの最終決定",
    "final_p1": "最初の変更点の1つは親指クラスターでした。最初のデザインでは、内側の親指キーが内側すぎ、不快な伸ばしが必要でした。",
    "final_p2": "段ボールのプロトタイプがこれを確認しました。私はアークをよりきつく、より自然に届くように調整しました。",
    "final_p3": "別のイテレーションでは、小指の列の調整が含まれていました。低すぎることが判明したため、少し上げました。",
    "final_p4": "さらにいくつかの微調整の後、快適で自然に感じるレイアウトにたどり着きました。これがPCBの基礎となる最終デザインになりました。",
    "final_p5": "この最終的な段ボールバージョンは、プロジェクトの残りの部分での私の信頼できるガイドでした。",
    "pcb_h3": "PCBの設計",
    "pcb_p1": "物理的なレイアウトが確定したので、キーボードの電子頭脳であるプリント基板（PCB）を設計する時が来ました。このプロセスにはKiCadを使用しました。PCBアートには、「すべてはあなたの手の中に」というモットーを選びました。",
    "pcb_p2": "キーボードの回路図はかなり単純です。各スイッチはマトリックスの一部であり、「ゴースティング」（誤ったキー入力が登録されること）を防ぐためにダイオードで接続されています。",
    "pcb_p3": "マイクロコントローラーとしてRaspberry Pi Picoを選びました。安価で強力、そしてQMKファームウェアで十分にサポートされているためです。",
    "pcb_p4": "キーボードの2つの半分は、電力とデータマトリックス信号を運ぶTRRSケーブルで接続されています。",
    "pcb_p5": "Kailhホットスワップソケットのサポートを追加しました。これにより、はんだ付けなしで簡単にスイッチを交換できます。",
    "pcb_p6": "パズルを解くようなすべての配線を終えた後、シルクスクリーンアートを追加し、製造用のガーバーファイルを生成しました。",
    "pcb_p7": "ファイルをメーカーに送り、数週間後、完成した基板が届きました！",
    "pcb_p8": "デザインがデジタルファイルから物理的なオブジェクトになるのを見るのは、信じられないほどやりがいがありました。",
    "keymap_h3": "私の個人的なキーマップ",
    "keymap_p1": "キーボードは良いキーマップなしでは何もありません。私はQMKで自分のものをプログラムしました。それには4つの主要なレイヤーがあります：文字用のベースレイヤー、数字用のレイヤー、記号用のレイヤー、そしてシステムコントロールとFキー用のファンクションレイヤーです。レイヤーは親指キーでアクセスします。また、EscapeやTabのような一般的なキーにはコンボを多用しています。",
    "discoveries_h2": "発見と結果",
    "discoveries_p1": "このプロジェクトは大きな学習経験でした。以下に主要な発見をいくつか挙げます：",
    "discoveries_li1": "段ボールでのプロトタイピングは、エルゴノミクスデザインにとって不可欠で、安価で効果的なステップです。",
    "discoveries_li2": "親指クラスターの角度と位置は、快適性にとって最も重要な要素です。",
    "discoveries_li3": "レイヤーとコンボの使用にはかなりの学習曲線がありますが、数週間後には第二の天性になります。",
    "discoveries_li4": "KiCadのような現代のオープンソースソフトウェアのおかげで、PCBの設計は思っているほど怖くありません。",
    "discoveries_li5": "キーボードに「フリーサイズ」の解決策はありません。パーソナライズが鍵です。",
    "discoveries_p2": "また、シリコンで満たされたケースが優れた防音効果を提供することも発見しましたが、最終的なケースをホットグルーを重ねて作るだけでどうなるか見てみたいという誘惑に今も駆られています。",
    "plans_h2": "今後の計画",
    "plans_h3_layout": "レイアウト改訂（サンシャインV2）",
    "plans_p1": "第2バージョンでは、少しテンティング（半分を中央で上向きに傾けること）を追加したり、DactylやKinesis Advantageキーボードのように、キーウェルのためにより攻撃的な曲率を試したりしてみたいです。",
    "plans_h3_features": "新しいハードウェア機能",
    "plans_p2": "現在のレイヤーを表示するための小さなOLEDスクリーンや、マウスの必要性をなくすために親指の下に小さなトラックボールやトラックパッドを追加することに興味があります。",
    "plans_h3_production": "生産と共有",
    "plans_p3": "すべての設計ファイル（KiCad、ケースモデル）を近々GitHubで公開する予定です。グループバイの計画はありませんが、これらのファイルが自分だけの完璧なキーボードを作りたいと思っている他の人々にとって役立つことを願っています。",
    "bye_h2": "おわり（今のところは）",
    "bye_p1": "私のキーボードの旅を読んでくれてありがとう！サンシャインキーボードの製作は、私がこれまで手がけた中で最も挑戦的でやりがいのあるプロジェクトの1つでした。それは単なるツールではなく、私たちがコンピュータとどのように対話するかについての哲学の反映です。質問があれば、お気軽にご連絡ください。"
  },
  "gt": {
    "sunshine_title": "  ",
    "win_gallerynav_title": "◈ .nav",
    "win_gallery_title": "▤ .article",
    "nav_h2_tldr": "",
    "nav_h2_intro": "",
    "nav_h2_objectives": "",
    "nav_h2_design": " ",
    "nav_h3_cad": "&ensp;  ",
    "nav_h4_final": "&emsp; ",
    "nav_h3_pcb": "&ensp;  PCB",
    "nav_h3_keymap": "&ensp; ",
    "nav_h2_discoveries": "",
    "nav_h3_plans": "&ensp; ",
    "nav_h2_bye": " ",
    "nav_h2_home": "⌂←",
    "sunshine_h1": "  ",
    "sunshine_p1": "     , ,        .                           .",
    "sunshine_p2": "        ,          PCB    .     .",
    "tldr_h2": " (TL;DR)",
    "tldr_p1": "           36 .         ()    ,             .      ,    PCB   ,     QMK . ' ,  ' .       :",
    "intro_h2": " & ",
    "intro_p1": "      , '      .       ,   Lily58  ,        ,  '   .        .",
    "intro_p2": "       ** ,    .        ,         (-40%).    :                  ?",
    "intro_p3": "      :       , '     .",
    "objectives_h2": " ",
    "objectives_p1": "   ,           .          .",
    "objectives_h3_theory": "      ",
    "objectives_h4_phalanges": " :  ",
    "objectives_p2": "            .         '   .  ,       ,           <kbd>Space</kbd>, <kbd>Enter</kbd>,  <kbd>Backspace</kbd>.",
    "objectives_h4_combos": "  :   ",
    "objectives_p3": "     ,   .  ,           `ASDF`  `1234`.  ,  ','            ,         .  ,  <kbd>J</kbd>  <kbd>K</kbd>    <kbd>Escape</kbd>.",
    "objectives_p4": "       :",
    "objectives_li1": "3   5   ,    .",
    "objectives_li2": "       .",
    "objectives_li3": " ,   .",
    "objectives_li4": "            ,  ,     .",
    "objectives_li5": "   (QMK or ZMK).",
    "objectives_li6": "    .",
    "objectives_li7": "      - .",
    "design_h2": "  ",
    "design_p1": "  ,     Type-22,        .               .",
    "design_p2": ",  2D     '      **.  ,     .",
    "cad_h3": "CAD (  )",
    "cad_p1": "   3D       PCB,         : .       1:1         .",
    "cad_p2": "      .                 .",
    "cad_p3": " -   .        ,         .       ,     .",
    "cad_p4": "   ,       .",
    "final_h3": "  ",
    "final_p1": "         .           ,    .",
    "final_p2": "    .            .",
    "final_p3": "      .       ,     .",
    "final_p4": "    ,          .           PCB .",
    "final_p5": "             .",
    "pcb_h3": "  PCB",
    "pcb_p1": "    ,           :     (PCB).   KiCad   .   PCB ,     'ALL IS IN YOUR HANDS'.",
    "pcb_p2": "       .       ,       '' (    ).",
    "pcb_p3": "     Raspberry Pi Pico     ' , ,  -  QMK .",
    "pcb_p4": "          TRRS ,        .",
    "pcb_p5": "    Kailh - ,         .",
    "pcb_p6": "    ,      ,         Gerber   .",
    "pcb_p7": "        ,    ,    !",
    "pcb_p8": "              .",
    "keymap_h3": "  ",
    "keymap_p1": "       .     QMK.     :     ,    ,    ,         F-.        .            Escape  Tab.",
    "discoveries_h2": " & ",
    "discoveries_p1": "      .       :",
    "discoveries_li1": "     , ,      .",
    "discoveries_li2": "              .",
    "discoveries_li3": "          ,          .",
    "discoveries_li4": "  PCB      ,    -   KiCad.",
    "discoveries_li5": "   '---'   .   .",
    "discoveries_p2": "            ,                ,     .",
    "plans_h2": " ",
    "plans_h3_layout": "  (Sunshine V2)",
    "plans_p1": "   ,          (      )          ,    Dactyl  Kinesis Advantage .",
    "plans_h3_features": "  ",
    "plans_p2": "'      OLED      ,                 .",
    "plans_h3_production": " & ",
    "plans_p3": "        (KiCad,  )  GitHub .  '      ,                 .",
    "bye_h2": "  ( )",
    "bye_p1": "      !               '  . '    ,             .     ,     ."
  }
}